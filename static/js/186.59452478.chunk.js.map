{"version":3,"file":"static/js/186.59452478.chunk.js","mappings":"uMA8BA,UA3BgB,WAAO,IAAD,EACpB,GAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAA8BC,OAAOJ,GAAU,WAC5CK,MAAK,SAAAC,GAAQ,OAAIP,GAAW,OAAIO,EAASC,KAAKC,SAAjC,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,KAGF,+BACE,yCACGF,QADH,IACGA,OADH,EACGA,EAASe,KAAI,SAAAC,GAAM,OAClB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADE,WADtB,SAOI,yBACE,6EAMX,C,uKC1BKC,EAAU,4CACVC,EAAW,+BACXC,EAAW,kBAEJC,EAAc,WAGzB,OADiBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OADA,uBACA,OAAmCD,GAErD,EAEYK,EAAe,SAAAN,GAC1B,IAAMO,EAAI,iBAAaP,GAEvB,OADiBK,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBK,GAAxB,OAA+BN,GAA/B,OAAyCE,GAE3D,EAEYjB,EAAgC,SAACc,EAAIQ,GAChD,IAAMC,EAAO,iBAAaT,EAAb,YAAmBQ,GAEhC,OADiBH,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBO,GAAxB,OAAkCR,GAAlC,OAA4CE,GAE9D,EAEc,SAAeO,EAA9B,+CAAe,OAAf,oBAAe,WAA8BC,GAA9B,gFACPC,EADO,iBACWD,GADX,kBAGYN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wBACMD,GADN,OACgBE,GADhB,OAC2BS,IAJvC,cAGLvB,EAHK,yBAMJA,GANI,gCAQXK,QAAQC,IAAR,MARW,gF","sources":["components/Reviews/Reviews.jsx","sources/getThemoviedb.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieAdditionalInformation } from 'sources/getThemoviedb';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieAdditionalInformation(Number(movieId), 'reviews')\n      .then(response => setReviews([...response.data.results]))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews?.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        )) ?? (\n          <li>\n            <span>We don't have any reviews for this movie.</span>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY_API = '?api_key=df88ba4f44a5ed712dd0a71f1b3d877c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst LANGUAGE = '&language=en-US';\n\nexport const getTrending = () => {\n  const TRENDING = '/trending/movie/day';\n  const response = axios.get(`${BASE_URL}${TRENDING}${KEY_API}`);\n  return response;\n};\n\nexport const getMovieById = id => {\n  const BYID = `/movie/${id}`;\n  const response = axios.get(`${BASE_URL}${BYID}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport const getMovieAdditionalInformation = (id, info) => {\n  const CREDITS = `/movie/${id}/${info}`;\n  const response = axios.get(`${BASE_URL}${CREDITS}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport default async function getSearchMovie(query) {\n  const QUERY = `&query=${query}`;\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie${KEY_API}${LANGUAGE}${QUERY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieAdditionalInformation","Number","then","response","data","results","catch","error","console","log","map","review","author","content","id","KEY_API","BASE_URL","LANGUAGE","getTrending","axios","getMovieById","BYID","info","CREDITS","getSearchMovie","query","QUERY"],"sourceRoot":""}