{"version":3,"file":"static/js/691.6e286d73.chunk.js","mappings":"oMAYA,EAV0B,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaC,OAAOJ,IAAOK,MAAO,CAAEC,KAAML,GAAlD,SACGF,KAIR,ECED,EAV0B,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OAC3B,OACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,SAAC,EAAD,CAAkCV,MAAOU,EAAMV,MAAOC,GAAIS,EAAMT,IAAxCS,EAAMT,GADf,KAKtB,C,kJCTYU,EAAaC,EAAAA,EAAAA,KAAH,6CAIVC,EAAcD,EAAAA,EAAAA,MAAH,0D,SC2CxB,EA3Ce,WAAO,IAAD,EACnB,GAAwCE,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAK,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,IAC3CC,EAAAA,EAAAA,YAAU,WACM,KAAVF,IAIJG,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GAAQ,OAAIN,GAAa,OAAIM,EAASC,KAAKC,SAAnC,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,IAeJ,OACE,iCACE,UAACT,EAAD,CAAYqB,SAfK,SAAAC,GACnBA,EAAMC,iBACN,IAAQC,EAAcF,EAAMG,OAAOC,SAA3BF,UAEgB,KAApBA,EAAUG,OAKdtB,EAAgB,CAAEI,MAAOe,EAAUG,QACnCH,EAAUG,MAAQ,IALhBC,MAAM,4BAMT,EAIG,WACE,SAAC1B,EAAD,CACE2B,KAAK,YACLC,KAAK,OACLC,aAAa,MACbC,WAAS,KAEX,mBAAQF,KAAK,SAAb,uBAGDvB,IAAa,SAAC0B,EAAA,EAAD,CAAmBpC,OAAQU,MAG9C,C,uKC9CK2B,EAAU,4CACVC,EAAW,+BACXC,EAAW,kBAEJC,EAAc,WAGzB,OADiBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OADA,uBACA,OAAmCD,GAErD,EAEYK,EAAe,SAAAjD,GAC1B,IAAMkD,EAAI,iBAAalD,GAEvB,OADiBgD,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBK,GAAxB,OAA+BN,GAA/B,OAAyCE,GAE3D,EAEYK,EAAgC,SAACnD,EAAIoD,GAChD,IAAMC,EAAO,iBAAarD,EAAb,YAAmBoD,GAEhC,OADiBJ,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBQ,GAAxB,OAAkCT,GAAlC,OAA4CE,GAE9D,EAEc,SAAexB,EAA9B,+CAAe,OAAf,oBAAe,WAA8BH,GAA9B,gFACPmC,EADO,iBACWnC,GADX,kBAGY6B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wBACMD,GADN,OACgBE,GADhB,OAC2BQ,IAJvC,cAGL9B,EAHK,yBAMJA,GANI,gCAQXK,QAAQC,IAAR,MARW,gF","sources":["components/TrendingTodayItem/TrendingTodayItem.jsx","components/TrendingTodayList/TrendingTodayList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","sources/getThemoviedb.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst TrendingTodayItem = ({ title, id }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link to={`/movies/${Number(id)}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  );\n};\nexport default TrendingTodayItem;\n\nTrendingTodayItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n};\n","import TrendingTodayItem from 'components/TrendingTodayItem/TrendingTodayItem';\nimport PropTypes from 'prop-types';\n\nconst TrendingTodayList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <TrendingTodayItem key={movie.id} title={movie.title} id={movie.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TrendingTodayList;\n\nTrendingTodayList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  margin: 20px 0 0;\n`;\n\nexport const StyledInput = styled.input`\n  width: 350px;\n  height: 25px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport getSearchMovie from 'sources/getThemoviedb';\nimport TrendingTodayList from 'components/TrendingTodayList/TrendingTodayList';\nimport { StyledForm, StyledInput } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [findFilms, setFindFilms] = useState(null);\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    getSearchMovie(query)\n      .then(response => setFindFilms([...response.data.results]))\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { nameFilms } = event.target.elements;\n\n    if (nameFilms.value === '') {\n      alert('please fill in the fields');\n      return;\n    }\n\n    setSearchParams({ query: nameFilms.value });\n    nameFilms.value = '';\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          name=\"nameFilms\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n\n      {findFilms && <TrendingTodayList movies={findFilms} />}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY_API = '?api_key=df88ba4f44a5ed712dd0a71f1b3d877c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst LANGUAGE = '&language=en-US';\n\nexport const getTrending = () => {\n  const TRENDING = '/trending/movie/day';\n  const response = axios.get(`${BASE_URL}${TRENDING}${KEY_API}`);\n  return response;\n};\n\nexport const getMovieById = id => {\n  const BYID = `/movie/${id}`;\n  const response = axios.get(`${BASE_URL}${BYID}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport const getMovieAdditionalInformation = (id, info) => {\n  const CREDITS = `/movie/${id}/${info}`;\n  const response = axios.get(`${BASE_URL}${CREDITS}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport default async function getSearchMovie(query) {\n  const QUERY = `&query=${query}`;\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie${KEY_API}${LANGUAGE}${QUERY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["title","id","location","useLocation","to","Number","state","from","movies","map","movie","StyledForm","styled","StyledInput","useSearchParams","searchParams","setSearchParams","useState","findFilms","setFindFilms","query","get","useEffect","getSearchMovie","then","response","data","results","catch","error","console","log","onSubmit","event","preventDefault","nameFilms","target","elements","value","alert","name","type","autoComplete","autoFocus","TrendingTodayList","KEY_API","BASE_URL","LANGUAGE","getTrending","axios","getMovieById","BYID","getMovieAdditionalInformation","info","CREDITS","QUERY"],"sourceRoot":""}