{"version":3,"file":"static/js/736.930267f1.chunk.js","mappings":"+OAEaA,E,OAAYC,EAAAA,IAAH,2D,SCoCtB,EAlCa,WAAO,IAAD,EACjB,GAAyBC,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAA8BC,OAAOJ,GAAU,WAC5CK,MAAK,SAAAC,GAAQ,OAAIP,GAAQ,OAAIO,EAASC,KAAKC,MAA9B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,KAEF,yCACGF,QADH,IACGA,OADH,EACGA,EAAOe,KAAI,SAAAL,GAAI,OACd,2BACE,SAACb,EAAD,CACEmB,IACEN,EAAKO,aAAL,UAbY,mCAaZ,OAAyCP,EAAKO,cAAiB,GAEjEC,IAAKR,EAAKS,QAEZ,4BACE,wBAAKT,EAAKS,QACV,0BAAOT,EAAKU,iBATPV,EAAKW,GADA,WADlB,SAeI,yBACE,wEAKT,C,uKCnCKC,EAAU,4CACVC,EAAW,+BACXC,EAAW,kBAEJC,EAAc,WAGzB,OADiBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OADA,uBACA,OAAmCD,GAErD,EAEYK,EAAe,SAAAN,GAC1B,IAAMO,EAAI,iBAAaP,GAEvB,OADiBK,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBK,GAAxB,OAA+BN,GAA/B,OAAyCE,GAE3D,EAEYnB,EAAgC,SAACgB,EAAIQ,GAChD,IAAMC,EAAO,iBAAaT,EAAb,YAAmBQ,GAEhC,OADiBH,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBO,GAAxB,OAAkCR,GAAlC,OAA4CE,GAE9D,EAEc,SAAeO,EAA9B,+CAAe,OAAf,oBAAe,WAA8BC,GAA9B,gFACPC,EADO,iBACWD,GADX,kBAGYN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wBACMD,GADN,OACgBE,GADhB,OAC2BS,IAJvC,cAGLzB,EAHK,yBAMJA,GANI,gCAQXK,QAAQC,IAAR,MARW,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","sources/getThemoviedb.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledImg = styled.img`\n  width: 150px;\n  heigth: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieAdditionalInformation } from 'sources/getThemoviedb';\nimport { StyledImg } from './Cast.styled';\nconst Cast = () => {\n  const [casts, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  const POSTER_BASE_URL = 'http://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getMovieAdditionalInformation(Number(movieId), 'credits')\n      .then(response => setCast([...response.data.cast]))\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return (\n    <ul>\n      {casts?.map(cast => (\n        <li key={cast.id}>\n          <StyledImg\n            src={\n              cast.profile_path ? `${POSTER_BASE_URL}${cast.profile_path}` : ''\n            }\n            alt={cast.name}\n          />\n          <div>\n            <h3>{cast.name}</h3>\n            <span>{cast.character}</span>\n          </div>\n        </li>\n      )) ?? (\n        <li>\n          <span>We don't have any casts for this movie</span>\n        </li>\n      )}\n    </ul>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY_API = '?api_key=df88ba4f44a5ed712dd0a71f1b3d877c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst LANGUAGE = '&language=en-US';\n\nexport const getTrending = () => {\n  const TRENDING = '/trending/movie/day';\n  const response = axios.get(`${BASE_URL}${TRENDING}${KEY_API}`);\n  return response;\n};\n\nexport const getMovieById = id => {\n  const BYID = `/movie/${id}`;\n  const response = axios.get(`${BASE_URL}${BYID}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport const getMovieAdditionalInformation = (id, info) => {\n  const CREDITS = `/movie/${id}/${info}`;\n  const response = axios.get(`${BASE_URL}${CREDITS}${KEY_API}${LANGUAGE}`);\n  return response;\n};\n\nexport default async function getSearchMovie(query) {\n  const QUERY = `&query=${query}`;\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie${KEY_API}${LANGUAGE}${QUERY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["StyledImg","styled","useState","casts","setCast","movieId","useParams","useEffect","getMovieAdditionalInformation","Number","then","response","data","cast","catch","error","console","log","map","src","profile_path","alt","name","character","id","KEY_API","BASE_URL","LANGUAGE","getTrending","axios","getMovieById","BYID","info","CREDITS","getSearchMovie","query","QUERY"],"sourceRoot":""}